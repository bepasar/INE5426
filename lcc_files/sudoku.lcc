def initgrid()
{
	int grid;
	grid = new int[81];
}
def checkrow(int row,int num)
{
	int column;
	for(column = 0; column < 9; column = column + 1)
	{
		if(grid[row*size+column] == num)
			return 0;
	}
	return 1;
}
def checkcolumn(int column,int num)
{
	int row;
	for(row = 0; row < 9; row = row + 1)
	{
		if(grid[row*size+column] == num)
			return 0;
	}
	return 1;
}
def checkgrid(int row,int column,int num)
{
	row = (row/3)*3;
	column = (column/3)*3;
	int i;
	int j;
	for(i = 0; i < 3; i = i + 1)
	{
		for(j = 0; j < 3; j = j + 1)
		{
			if(grid[(row+i)*size + column + j] == num)
				return 0;
		}
	}
	return 1;
}
def solve(int row,int column)
{
	if(column < 8) {
		column = column + 1;
		solvesudoku(row, column);
	}
	else {
		row = row + 1;
		solvesudoku(row, 0);
	}
}
def display()
{
	int row;
	int column;
	print "RESOLVIDO";
	for(row = 0; row < 9; row = row + 1)
	{
		for(column = 0; column < 9; column = column + 1)
		{
			print grid[row*size+column];
		}
		print "\n";
	}
}
def solvesudoku(int row, int column)
{
	if(row > 8)
		display();
	if(grid[row][column] != 0)
		solve(row,column);
	else
	{
		int counter;
		for(counter = 1; counter <= 9; counter = counter + 1)
		{
			int ckRow; 
			ckRow = checkrow(row, ctr);
			int ckCol; 
			ckCol = checkcolumn(column, ctr);
			int ckGrid; 
			ckGrid = checkgrid(row, column, ctr);
			if(ckRow == 1 && ckCol == 1 && ckGrid == 1)
			{
				grid[row][column] = ctr;
				solve(row, column);
			}
		}
		grid[row][column] = 0;
	}
}
def main()
{
	int row;
	int column;
	print "Preencha os espaços com números entre 1-9 ou 0 para desconhecidos";

	int value;

	for(row = 0; row < 9; row = row + 1)
	{
		for(column = 0; column < 9; column = column + 1)
		{
			read value;
			grid[row*size+column] = value;
		}
	}
	solvesudoku(0,0);
}